plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'io.freefair.lombok' version '8.6'
}

group = 'kr.app'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

def querydslVersion = '5.0.0:jakarta'
def lombokVersion = '1.18.32'
def hibernateVersion = '6.5.2.Final'
def cubridJdbcVersion = '11.2.0.0035'
def commonslangVersion = '3.14.0'
def jjwtVersion = '0.12.6'

def querydslDir = 'src/main/generated/querydsl'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven {
		url 'https://maven.cubrid.org'
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-configuration-processor'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	// implementation 'org.springframework.boot:spring-boot-starter-data-jdbc' //cubrid-jdbc와 충돌로 인해 주석처리 함
	// implementation 'org.springframework.data:spring-data-rest-hal-explorer:4.2.5' //HAL Explorer
	// implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0' //Swagger-ui
	// implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.17.1' //Response를 XML로 반환
	implementation "cubrid:cubrid-jdbc:$cubridJdbcVersion"
	implementation "org.hibernate:hibernate-core:$hibernateVersion" //cubrid 접속을 위한 추가
	implementation "org.hibernate.orm:hibernate-community-dialects:$hibernateVersion" //cubrid 접속을 위한 추가
	implementation "com.querydsl:querydsl-jpa:$querydslVersion" // Querydsl
	implementation "org.apache.commons:commons-lang3:$commonslangVersion"
	implementation "io.jsonwebtoken:jjwt-api:$jjwtVersion"
	implementation 'com.github.ben-manes.caffeine:caffeine'
	
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	compileOnly "org.projectlombok:lombok:$lombokVersion"
	runtimeOnly "io.jsonwebtoken:jjwt-impl:$jjwtVersion"
	runtimeOnly "io.jsonwebtoken:jjwt-jackson:$jjwtVersion"
	// runtimeOnly 'com.h2database:h2'
	
	annotationProcessor "org.projectlombok:lombok:$lombokVersion"
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta" // Querydsl
	annotationProcessor "jakarta.annotation:jakarta.annotation-api" // Querydsl 관련
	annotationProcessor "jakarta.persistence:jakarta.persistence-api" // Querydsl 관련
	
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [ querydslDir ]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(querydslDir)
}

// src/test 폴더 아래에 있는 클래스에 대해 build 시 제외하도록 설정
tasks.withType(Test) {
    exclude '**/src/test/**'
}